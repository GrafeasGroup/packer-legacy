# Molecule managed

{% if item.registry is defined %}
FROM {{ item.registry.url }}/{{ item.image }}
{% else %}
FROM {{ item.image }}
{% endif %}

{% if item.env is defined %}
{% for var, value in item.env.items() %}
{% if value %}
ENV {{ var }} {{ value }}
{% endif %}
{% endfor %}
{% endif %}

{% if item.image.split(':', 1)[0] in ['debian'] %}

  {% if item.image.split(':', 1)[1] in ['buster', '10'] %}
ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update && \
  apt-get install -y --no-install-recommends sudo systemd systemd-sysv \
    bash ca-certificates iproute2 python3-apt aptitude && \
  apt-get clean && \
  rm -rf /var/lib/apt/lists/*
  {% endif %}

{% elif item.image.split(':', 1)[0] in ['centos'] %}

  {% if item.image.split(':', 1)[1] in ['8'] %}
RUN dnf makecache && \
  dnf --assumeyes install /usr/bin/python3 /usr/bin/python3-config /usr/bin/dnf-3 python3-pip sudo bash iproute && \
  dnf clean all
  {% elif item.image.split(':', 1)[1] in ['7'] %}
RUN yum makecache fast && \
  yum install -y /usr/bin/python /usr/bin/python2-config python-pip sudo yum-plugin-ovl bash iproute deltarpm && \
  sed -i 's/plugins=0/plugins=1/g' /etc/yum.conf && \
  yum clean all
  {% endif %}

RUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == \
  systemd-tmpfiles-setup.service ] || rm -f $i; done); \
  rm -f /lib/systemd/system/multi-user.target.wants/*; \
  rm -f /etc/systemd/system/*.wants/*; \
  rm -f /lib/systemd/system/local-fs.target.wants/*; \
  rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
  rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
  rm -f /lib/systemd/system/basic.target.wants/*; \
  rm -f /lib/systemd/system/anaconda.target.wants/*; \
  mkdir -p /run/systemd/system

{% else %}

# Default
RUN if [ $(command -v apt-get) ]; then export DEBIAN_FRONTEND=noninteractive && apt-get update && apt-get install -y python3 sudo bash ca-certificates iproute2 python3-apt aptitude && apt-get clean && rm -rf /var/lib/apt/lists/*; \
    elif [ $(command -v dnf) ]; then dnf makecache && dnf --assumeyes install /usr/bin/python3 /usr/bin/python3-config /usr/bin/dnf-3 sudo bash iproute && dnf clean all; \
    elif [ $(command -v yum) ]; then yum makecache fast && yum install -y /usr/bin/python /usr/bin/python2-config sudo yum-plugin-ovl bash iproute && sed -i 's/plugins=0/plugins=1/g' /etc/yum.conf && yum clean all; \
    elif [ $(command -v zypper) ]; then zypper refresh && zypper install -y python3 sudo bash iproute2 && zypper clean -a; \
    elif [ $(command -v apk) ]; then apk update && apk add --no-cache python3 sudo bash ca-certificates; \
    elif [ $(command -v xbps-install) ]; then xbps-install -Syu && xbps-install -y python3 sudo bash ca-certificates iproute2 && xbps-remove -O; fi

{% endif %}

# vim: ft=jinja2 syn=dockerfile.jinja2
